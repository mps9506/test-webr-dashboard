---
title: "test-webr-dashboard"
author: "Penguin Friend"
format:
  html:
    grid: 
      body-width: 1300px
    resources: 
      - shinylive-sw.js
filters: 
  - shinylive
---





```{shinylive-r}
#| standalone: true
#| viewerHeight: 800
library(shiny)
library(bslib)



ui <- page_sidebar(
  ## input selection
  sidebar = sidebar(
    selectInput("subcat",
                "BMP Category:",
                c("Row crop field" = "Cropland",
                  "Detention" = "Detention",
                  "Drainage" = "Drainage",
                  "Filtration" = "Filtration",
                  "Infiltration" = "Infiltration",
                  "Livestock" = "Livestock",
                  "Treatment" = "Treatment"),
                selected = "Livestock")),
  ## shows rendered output from shiny server
  verbatimTextOutput("summary",
                     placeholder = TRUE)
  
)


server <- function(input, output) {
  
  ## read data
  df <- read.csv("https://raw.githubusercontent.com/mps9506/test-webr-dashboard/main/data/data.csv",
                 colClasses = c("ValueID" = "character",
                                "StudyID" = "character",
                                "Pub_Year" = "factor",
                                "Parameter" = "factor",
                                "Source" = "factor",
                                "Source_Type" = "factor",
                                "BMP" = "factor",
                                "BMP_ID" = "factor",
                                "BMP_Class" = "factor",
                                "BMP_Subcat" = "factor",
                                "BMP_Category" = "factor",
                                "Scale" = "factor",
                                "Location" = "character",
                                "State" = "factor",
                                "Area" = "numeric",
                                "Latitude" = "numeric",
                                "Longitude" = "character",
                                "Data_Year" = "character",
                                "n" = "integer", 
                                "Pre" = "numeric",
                                "Post" = "numeric",
                                "Unit" = "character",
                                "X..Reduction" = "NULL",
                                "Log.Ratio" = "NULL"),
                 row.names = NULL)

  
  ## choose variables and fit lm
  model_output <- reactive({
    model_data <- df[df$BMP_SubCat == input$variable,]
    model_data <- model_data[!is.na(model_data$Pre) & !is.na(model_data$Post),]
    model_data
    # m1 <- lm(log(Post) ~ log(Pre),
    #          data = model_data)
    # m1
  })
  
  ## render model summary output
  output$summary <- renderPrint({ 
    summary(model_output())
  })
  
  
}

shinyApp(ui = ui, server = server)



```
